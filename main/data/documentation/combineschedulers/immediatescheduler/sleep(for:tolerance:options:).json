{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sleep"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":" = .zero, "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerOptions","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa"},{"kind":"text","text":"? = nil) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The time interval on which to sleep between yielding."}]}]},{"name":"tolerance","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The allowed timing variance when emitting events. Defaults to "},{"type":"codeVoice","code":"zero"},{"type":"text","text":"."}]}]},{"name":"options","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scheduler options passed to the timer. Defaults to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the task is cancelled before the time ends, this function throws "},{"type":"codeVoice","code":"CancellationError"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function doesnâ€™t block the scheduler."}]},{"type":"codeListing","syntax":null,"code":["try await in scheduler.sleep(for: .seconds(1))"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/combineschedulers\/immediatescheduler\/sleep(for:tolerance:options:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/CombineSchedulers\/ImmediateScheduler\/sleep(for:tolerance:options:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Suspends the current task for at least the given duration."}],"kind":"symbol","metadata":{"role":"symbol","title":"sleep(for:tolerance:options:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sleep"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerOptions","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:7Combine9SchedulerP0A10SchedulersE5sleep3for9tolerance7optionsy0B8TimeType_6StrideQZ_AK0B7OptionsQzSgtYaKF::SYNTHESIZED::s:17CombineSchedulers18ImmediateSchedulerV","extendedModule":"Combine","modules":[{"name":"CombineSchedulers"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/CombineSchedulers\/ImmediateScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/CombineSchedulers\/ImmediateScheduler\/Scheduler-Implementations"]]},"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://co.pointfree.ComposableArchitecture/documentation/CombineSchedulers/ImmediateScheduler/Scheduler-Implementations":{"role":"collectionGroup","title":"Scheduler Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/CombineSchedulers\/ImmediateScheduler\/Scheduler-Implementations","kind":"article","type":"topic","url":"\/documentation\/combineschedulers\/immediatescheduler\/scheduler-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/CombineSchedulers/ImmediateScheduler":{"role":"symbol","title":"ImmediateScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImmediateScheduler"}],"abstract":[{"type":"text","text":"A scheduler for performing synchronous actions."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/CombineSchedulers\/ImmediateScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImmediateScheduler"}],"url":"\/documentation\/combineschedulers\/immediatescheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/CombineSchedulers/ImmediateScheduler/sleep(for:tolerance:options:)":{"role":"symbol","title":"sleep(for:tolerance:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sleep"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerOptions","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Suspends the current task for at least the given duration."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/CombineSchedulers\/ImmediateScheduler\/sleep(for:tolerance:options:)","kind":"symbol","type":"topic","url":"\/documentation\/combineschedulers\/immediatescheduler\/sleep(for:tolerance:options:)"}}}